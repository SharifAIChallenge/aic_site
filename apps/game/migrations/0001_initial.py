# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-01-03 09:12
from __future__ import unicode_literals

import apps.game.models.challenge
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=2047)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('registration_start_time', models.DateTimeField()),
                ('registration_end_time', models.DateTimeField()),
                ('registration_open', models.BooleanField()),
                ('team_size', models.IntegerField()),
                ('entrance_price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('elim', 'Elimination'), ('double', 'Double Elimination'), ('league', 'League')], max_length=127)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitions', to='game.Challenge')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('infra_token', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done', models.BooleanField(default=False)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Competition')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('depend_method', models.CharField(choices=[('winner', 'Winner'), ('loser', 'Loser'), ('itself', 'Itself')], max_length=127)),
                ('score', models.IntegerField(default=0)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='TeamParticipatesChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='game.Challenge')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challanges', to='accounts.Team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=apps.game.models.challenge.get_submission_file_directory)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_final', models.BooleanField(default=False)),
                ('language', models.CharField(choices=[('c++', 'C++'), ('java', 'Java'), ('python2', 'Python 2'), ('python3', 'Python 3')], max_length=127)),
                ('infra_compile_message', models.CharField(blank=True, max_length=1023, null=True)),
                ('infra_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.TeamParticipatesChallenge')),
            ],
        ),
        migrations.CreateModel(
            name='UserAcceptsTeamInChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_acceptance', to='game.TeamParticipatesChallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='submission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.TeamSubmission'),
        ),
        migrations.AddField(
            model_name='match',
            name='part1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mathces_as_first', to='game.Participant'),
        ),
        migrations.AddField(
            model_name='match',
            name='part2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_second', to='game.Participant'),
        ),
        migrations.AddField(
            model_name='challenge',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game'),
        ),
    ]
