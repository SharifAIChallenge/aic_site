language: python
python: 3.6
addons:
  ssh_known_hosts:
  - 81.31.168.207
stages:
- test
- name: deploy_test
  if: type = push AND (branch IN (travis_integration, production-test))
- name: deploy_production
  if: type = push AND (branch IN (master, travis_integration))
jobs:
  include:
  - stage: test
    services: postgresql
    env:
    - DJANGO=1.11
    before_install:
    - export DJANGO_SETTINGS_MODULE=aic_site.settings.development
    - export PYTHONPATH=$HOME/builds/SharifAIChallenge/aic_site
    - export PIP_USE_MIRRORS=true
    install:
    - pip install -r requirements/production.txt
    - pip install django==$DJANGO --quiet
    - pip install psycopg2 --quiet
    before_script:
    - psql -c "CREATE DATABASE mydb;" -U postgres
    script:
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py test
  - stage: deploy_production
    addons:
      apt:
        packages:
        - sshpass
        - optipng
        - jpegoptim
        - rsync
    script:
    - mkdir build
    - rsync -r --exclude='.*' --exclude='build' --exclude='deploy' ./ build
    - cd build/config/nginx/sites-available
    - cp aichallenge.sharif.edu ../sites-enabled
    - cd ../../../..
    - cd deploy
    - cp deploy.sh Dockerfile ../build
    - cp ./docker-compose.yml ../build/docker-compose.yml
    - cd ..
    - cd build/apps/
    - find . -iname '*.png' -print0 | xargs -0 optipng -o7 -preserve
    - find . -iname '*.jpg' -print0 | xargs -0 jpegoptim --max=90 --strip-all --preserve
      --totals
    - cd ../..
    - tar -czf deploy_package.tgz build
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      deploy_package.tgz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - rm -r build deploy_package.tgz
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      deploy/deploy.sh $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST
      chmod +x $DEPLOY_PATH/deploy.sh
    - sshpass -e ssh -t -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
      $DEPLOY_USER@$DEPLOY_HOST sudo $DEPLOY_PATH/deploy.sh
  - stage: deploy_test
    addons:
      apt:
        packages:
        - sshpass
        - optipng
        - jpegoptim
        - rsync
    script:
    - mkdir build_test
    - rsync -r --exclude='.*' --exclude='build_test' --exclude='deploy' ./ build_test
    - cd build_test/config/nginx/sites-available
    - cp aichallenge.sharif.edu.test ../sites-enabled
    - cd ../../../..
    - cd deploy
    - cp deploy_test.sh Dockerfile ../build_test
    - cp ./docker-compose_test.yml ../build_test/docker-compose.yml
    - cd ..
    - cd build_test/apps/
    - find . -iname '*.png' -print0 | xargs -0 optipng -o7 -preserve
    - find . -iname '*.jpg' -print0 | xargs -0 jpegoptim --max=90 --strip-all --preserve
      --totals
    - cd ../..
    - tar -czf deploy_test_package.tgz build_test
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      deploy_test_package.tgz $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - rm -r build_test deploy_test_package.tgz
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
      deploy/deploy_test.sh $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - sshpass -e ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST
      chmod +x $DEPLOY_PATH/deploy_test.sh
    - sshpass -e ssh -t -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
      $DEPLOY_USER@$DEPLOY_HOST sudo $DEPLOY_PATH/deploy_test.sh
env:
  global:
  - secure: rQisQkkzBLU5omXRyDz1eczEOcc++NQv+cfHKl+2yjf3x4cbRfiUmwFujuNN1GvpaHSf7zdCbn4tDIB5CXfwG6nlDLn7eFdgPC1rAUZ3erWqen0bsackWLNXwBtbGZsdFkp0nabfpuxT7JAFgQEeTx/JSzi80nkQzuvd9FxBzEuh4SDI78oOHbemCLAw0HlcMLcy5ZKmsm0Y6Cc3oW7/Q+fyPdAxpdOAv5ugNAmx62GJRp3MYlt1qJ8fOU4doFtY5UqFJODhAtY/S9L2tn5BKEA1W7koTQyuEn7G9aYKfPlEfzYzLplKoNr7WzWgSP+dxWUO1jolFTlEVaxCeWDD4u3gN+gYqB+0MRkRxF0ovBhlYzP9egkr9dT27QtTKhPj0HMqhVUVxm2Vfr4MwcsZkVGQFHiLqjP3G7epltqITM/kBkHt2yIJlJmiRVhfqx3RJAq3GQ7twKh0WmAfEYAXLukrrNm92FjWvz/Y7ocN8y/RCBXxmM/9H8C0urJ4RfFodMTis1+5isFKswdxMOMF4xfC48dGmxQV2jHycnCim+nrHY6tSz8HhXIsmDE47u7IrEuYTeo6BOy7miwr4x9gvS70KjD1WXwRXzR3GwJBdJ94zDKLwpnqQ4wFaKaVibgH4g1nXbs65AFFmgZRaH2N8foKhuT/+FMDTCxdATH+VJ8=
  - secure: Vr58zGNRfD7nBee7e9ONHWGVk4exZCVrSLqbIkMFmazaD+6m/73YSJCpyN4d1Z7nCxVycsD0LIZDfqMn11V6jF5xMNqkKPa9P+0mFcuQxwGHslrNrp5d4uFzi88pEHZqDrOYKov2NXzCu7WvE/8AqAaM4v2+TEpqvLrScz5P/sHV1tvfha/6F6UCnYZ6zxNsZ8pJcEEYxdy2vHD+ePLKky49FCto7qfffAIdKYwtp/4ADzTEqUrp/osqDJc00sheTx6laHM0ksopYxE+hodI7fVBb9Nq7FhF8CnWX0CxNkD+GkrOh9oSPW1+PESXTKTzFntGOZ8ZjrThkRj6K+bMcMIEltx6ZO/8CBUV/FNjh5AC8yL1mAGWzXrEaRy/Od5oPSVulmuhU1iXsNJmkDCoHiUUDIuOeAkpdgUBQOMWOnpJxT1tWX2tCv9h/E4imaDfeS8uH3f6WEdHK05f7v2+RH4xORJmvhCyjW21wDK/ERCFLR8MXt0j38QPwlOFLI6+t28vwG8iIhzpBbhmz+c8DagrxoQswIZ98P8ABt9pCT6g5BxRPVaqPsr0+SllpXiRuKFCcw1KxGReFQglBjoneW4yYfHuGo25xfXcqChsG5fafJxlOnQCxXhMeJrQ2UsLVi0zJdUJXfcv1RsAkQ8BzqfqAT2i66smG9/kRONhRBo=
  - secure: kwZMJxdO3D8R83uYvFb6orz7tyy5/kMiNLRYurcj0JDEP+u64PUcen66zM71ppk/Fv2kzBV/fLvum/ewnNlaRu0U5IsLaFiJrbRcs6zyDeODoYai9SIblh+ciGTYdh8sCM5pMjL9aMYrP0IE3l9n/RYw2nzSQi8Ln6KDRuE60si6R6pOk7ZZYSzpm/Lil8f8JigJ5mBztqEey2vFc/p0LjUH2RFOIErsHmZYJ5GQiN7uufmwc6AW10i0MEhqwyr5VW1AmEcy6N9C1TXcYyPirMTTDIH7ovo6XRDV+vCKyWkmAZiVJUeo9BnRJv54jSA3HC3HGb/Zp/SmdblCzZEHDpI7KPoIFDTplTDBJ3Wa3jBMvJv7n3tvXksXq7IBPt35//zWW5BSw/yhJlzA8pNCs9+3Vw+f73o8mLQTnzOLVcHZaOzh8Xi9xW9cdjNMGDws0Vw7Z0Vu1IATKVKrQH42BOIQ8z5GOxJxXOvkTWnxMjTUS3DPXUdf6A6PselFf6N7GQBBNeSrXt+0U+45gZDWt6oZzKGmbfWwb/bdYmW8WDHwt5GVlhDzw5tSieeGG2xi+Hgpylwa3UKtWORzd8rsiHZqOo4XKR82UPgJu59HjbLHIPSu2fvLuKaYHxSEnP0KqIO9oj/5HkdIkQDhmNFS4Om0n6eElBNSdRMEL22KXqM=
  - secure: coYRr6NkJvAoITQV6987TlSr7yH8wFNp5WWG8TV58P5Wg5awpHX7LJY7hq/V7wC5+4FDrJVpNSgoXIAAbgGNGh7ShKrLxVmbwhDtrfOWW3/YGMHF/FRXRigGTlde5wfGYHSi2Slhm75d6L1UpCiRlcEVzBYH9zwbuATFBmnEEg0+P4nfWTaOmFn6BlSJPaErxZJnNwPyM0A7q2BgL8C2PUcXS9ba3yMYwwIjBoELN6V4uoagKhlxAwj3CWgpzjGwIWTa7jwPY4FY2yUIfQX1HUPrG99m1AzL+sv7lZ90YNSDdmZEcAB2drJ+wMReSp9b4laMhy52tYur9IiC6acwG35UMMWI3j5CCiK4QW+68wBczW4CnFR3Li3l0LmBpH3qb2+HHb8DjUx6IzEG1TS275wQ0rPoKz5Uqs9LRu8PrIB+X42tKGdrEhtBReA3hTxeHQ7mOm9OXJ6ckB+WmOalfsvDrKgd+XJvEdG/67saApUF3vheFCEbwEveJX2Xujt79yclEmw1QlHnEzdKPsurYsi0H5NcTBz80X/fGN0epQV4tVLU5IcuyxFCGCLrS6YQywaB6hzqZqgWYtKRkTgo8UM1b5dObYGx1URDQ5yz8a8K7kjVIjPs6UHE1lvCekA0T6RBz52BPwB6y6KZX04JDzXB+MgDWylYpuMdaa6FMc4=
