language: python
python:
- 3.6
- pypy
stages:
- test
- name: deploy_test
  if: type = push AND (branch IN (travis_integration, production-test))
- name: deploy_production
  if: type = push AND (branch IN (master, travis_integration))
jobs:
  include:
  - stage: test
    services: postgresql
    env:
    - DJANGO=1.11
    before_install:
    - export DJANGO_SETTINGS_MODULE=aic_site.settings.development
    - export PYTHONPATH=$HOME/builds/SharifAIChallenge/aic_site
    - export PIP_USE_MIRRORS=true
    install:
    - pip install -r requirements/production.txt
    - pip install django==$DJANGO --quiet
    - pip install psycopg2 --quiet
    before_script:
    - psql -c "CREATE DATABASE mydb;" -U postgres
    script:
    - python manage.py makemigrations
    - python manage.py migrate
    - python manage.py test
  - stage: deploy_production
    addons:
      ssh_known_hosts:
      - 81.31.168.207
      apt:
        packages:
        - sshpass
        - optipng
        - jpegoptim
        - rsync
    script:
    - mkdir build
    - rsync -r --exclude='.*' --exclude='build' --exclude='deploy' ./ build
    - cd build/config/nginx/sites-available
    - cp aichallenge.sharif.edu ../sites-enabled
    - cd ../../../..
    - cd deploy
    - cp deploy.sh Dockerfile ../build
    - cp ./docker-compose.yml ../build/docker-compose.yml
    - cd ..
    - cd build
    - sed -i 's/os.environ.setdefault("DJANGO_SETTINGS_MODULE", "aic_site.settings.development")/os.environ.setdefault("DJANGO_SETTINGS_MODULE",
      "aic_site.settings.production")/g' manage.py
    - cd ..
    - cd build/apps/
    - find . -iname '*.png' -print0 | xargs -0 optipng -o7 -preserve
    - find . -iname '*.jpg' -print0 | xargs -0 jpegoptim --max=90 --strip-all --preserve
      --totals
    - cd ../..
    - tar -czf deploy_package.tgz build
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no ' deploy_package.tgz
      $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - rm -r build deploy_package.tgz
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no' deploy/deploy.sh
      $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - sshpass -e ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST chmod +x
      $DEPLOY_PATH/deploy.sh
    - sshpass -e ssh -t -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST sudo
      $DEPLOY_PATH/deploy.sh
  - stage: deploy_test
    addons:
      ssh_known_hosts:
      - 81.31.168.207
      apt:
        packages:
        - sshpass
        - optipng
        - jpegoptim
        - rsync
    script:
    - mkdir build_test
    - rsync -r --exclude='.*' --exclude='build_test' --exclude='deploy' ./ build_test
    - cd build_test/config/nginx/sites-available
    - cp aichallenge.sharif.edu.test ../sites-enabled
    - cd ../../../..
    - cd deploy
    - cp deploy_test.sh Dockerfile ../build_test
    - cp ./docker-compose_test.yml ../build_test/docker-compose.yml
    - cd ..
    - cd build_test
    - sed -i 's/os.environ.setdefault("DJANGO_SETTINGS_MODULE", "aic_site.settings.development")/os.environ.setdefault("DJANGO_SETTINGS_MODULE",
      "aic_site.settings.production_test")/g' manage.py
    - cd ..
    - cd build_test/apps/
    - find . -iname '*.png' -print0 | xargs -0 optipng -o7 -preserve
    - find . -iname '*.jpg' -print0 | xargs -0 jpegoptim --max=90 --strip-all --preserve
      --totals
    - cd ../..
    - tar -czf deploy_test_package.tgz build_test
    - export SSHPASS=$DEPLOY_PASS
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no' deploy_test_package.tgz
      $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - rm -r build_test deploy_test_package.tgz
    - sshpass -e rsync --progress -avzhe 'ssh -o StrictHostKeyChecking=no' deploy/deploy_test.sh
      $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - sshpass -e ssh -o StrictHostKeyChecking=no -o $DEPLOY_USER@$DEPLOY_HOST chmod
      +x $DEPLOY_PATH/deploy_test.sh
    - sshpass -e ssh -t -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST sudo
      $DEPLOY_PATH/deploy_test.sh
env:
  global:
  - secure: FEjSHMCB5VtRVYukPHc0Gym/1ygx21MyJvLRuGB4xhNbrxuz3dGi/rqwmZqbWd0p/KMcq033Q2HQlonu9PmJ2eKVeGNESsaQNkVBkkWdEFNRQzQh+aHCP2PE5JvsFXxxwQNHr3+GMcF2Z6H0VWnPKyzZbguk+MrP5mHnBMnGwbAMv9RomaXLwos2BtG0Z+CpmoLOVFc+8tJz384tlSNqSgbyEUZDKm7+bZqxvfA/7ZQLbpvh0x1QrKrrwdbdEAaevKfG6/GpG01WiD42iktxfW8/DdzVK5QmMvXaMdsyJm7dBECOU4od/5CT2UhnWUyXTLh+gxL33ImADMfDBu/2Q7PSsVzJYyX8MrxbskOTE1J56aahvKREccxHMhuTJlTzchTiXSzgClfHwONqTwLe4O03fSWdNiwrDcahsliPqxSd9cTw2UbuDMnIvKTglJ2vuioHNJ1FZMUNKkolCoI0h6SWpHEi+6edhZOQIYX/z5MUUs3GCW2vbnuAeENgT7iy+4nfcygLC0fmPS/4DKNdimBQ1n+MOPSmkl9ydlKHGEYXL6e+Yb39GrgZ48+KqwPVa7sDJcij0FevWHx3zkniTrGoB3+ILVD1X8LLwhLIKMOlB3C5wBsFT+5WBpgZhPrN3/nnNGM3Q0P7eVMdsjS7aTAGaNlW+cRKLukWvo/kqYY=
  - secure: Vw8SLd8WCZEe9qytHCjbk66a33Z9WDy9M+aJT1DjfNk8dEthEWapfFGZ7w63Njudi3CFirDd6Bg9otL+2pQmBlWEMS8kTA8osAMQUvQDFfYWVNC2BPONBsVWZPrk/kYLSRkp/GMel6tZ1IibYgUi/e1XWBKVsCh2VtSpexhRJiWiXDGsfSMo6XLeHFR5FV63+5fWu5AdLV3MDUfL056IS/WG+YEPcLbB5zKPugMOSEpT877shF5eNWJ7uxyQsN09mjRL6lfLXtO/Y+C16ev3smUQKR6guK2iKPtfy7GUz/23pGDrn0UpVOXPSAMtaxOz7YMpdxMNsm9Q+OazK0wjU/RbKZwkU3Xj9Bs28FiNIRgaMgz3ttA50AKC9vNp6qHnM7zMAuql6f1BVWlp2TVkALOw3Lki+Iu+LWg3MRtKabyeqqtDFH5CFi0XnKvdwJQQJh9IRYOYmtFaHiEwhr5+8OzF9C4X/crNFSgUUn2pu7uI/JPcXAlwgIM+umIhWcBTThiNnA5wRkVk/xm8o9GqdIL6+CTjnzCGt1Et45mQAbjSLCKYSBGXTOZXfjRsbupGDx376cUiioPPf7Fc4Cad0P4v5j8gZif5/hBYkFIducFDN+5HCYY/KSxBxtSCVZ2p9vEapgAClb/OxJ2jYUVv56rvMWxhgnNRgl/5SDu2pkY=
  - secure: ks8Pm5DItyxzQxtY6NgcGX1UcQJoAL3PLV7EcGJUwAjfAqOLRzlUUlb9LlHT5/o/Rj4R/PG/SjkIStI01YReU9RRfVcfSmLsr0jd78dbwez0OFNNLJiXXmAzXPBzpXSADptyvJR+rs6X33eKb075b/t7oe+LHqtG836dIukf2Ad43FLo/+UNB21p5vs4hK1+uVEfrIbhK0yfK/6Vy4knnEiAgkyd8jnuz4IZsrznBcIfh7KG3X1+cgLUcxWpEnb6QRcsKQqMTDMjiJPR+c1TrvfeNPz7mMU+YA6NvzPbzMmQ4sylIv1ncrh/s/+TtRXMIQvtkvNizfSr9YLT9yPiT89OPCw+zNoBuMMfzXk6/5eiTfoaZCgI3wIhGsBmxSvQf0WhdR7gX2aNrlGQ/BNLY1WoiwEMxi+Rvz77qnjatMljuI7cy4aA6tQq7LBwKdMK1mCBtYCw1/204Ci4i0cXK0zEvrIo3PlGAT/1LXzFebGnG7ZX0PPCMKaXXDFAVVFb4Ncm8Ab4Xb+xyIx+PucBEQxTgFeL2vVsOg9Wq7uCpnm9Y+z1/4WAFJsiUwjtHynHotBsiLzR0nuGeShuYij6VEW1RqlR+NAB3iCa0uhxOh5+pHvNOgfz2jiDXzK/dC9YaiBIzNH/ojhjCv1cdSa7HRkyJG/BJ0dc48fosXyA0Zs=
  - secure: nkrL0A+u6HN9KdcGSpIGWNZCAqwCKMsxO6C6t+zr+/+ota5/f8l509plIVwq1INkPtVlg5oDCt42Q/3KPYZy4CO4v1rdcP3roCjedOffszoFtmg1oKAjafrqfgyRn3Dr2JcMG5K8IbYM2bLw7tXgzzrc56WSlGHPB3WNgWUwBxYwJcvfA8OD1EnuYOLkT082TnQSW4i45dF4wHL00P1W3g3v4GrLCvrUdD3kf9Os4cO1QlFEIuI13lRf2jyjZYS/oxhmVnB5PvpeL7FARr+JDuhQJBgTWZxjmVefTIZDBpL9GJjOVKa5gGZeKR5MH+zZcb5vi66tHAVjEgkhUwBnsWJblL7V4Ybibsm4vkhNhPhJN+b3r9DWz1ud+06C5lkEXrXL4IVg1q+WMlf+gMtYX98b67VVp6OsOIvNnf1zA3ImPx13D389/XKFyc4yKIQrc9v5Coyb+gT5tnSfg8Zj5XFbnxCE6LVEHZIjXvWGSpmkP671E/hbt0xacSDyeAFjpTerxHdfry5GegLTJXZXiVvJIYRjKrE+qBMga1rgdUbOf4kbYUZghIS1kOtGXjK3LWSmUgBBedhzF2TkJkAaBpphjOVAN/D3yxjl5AWgf90eNAGOWjdyMowmpxQhUJHJviRRIFi1XqfrJGfIHjUTyo1rw17uqT6kZcWzWVMjn0g=
